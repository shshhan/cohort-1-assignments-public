version: "3.8"

services:
  caddy:
    image: caddy:2.7-alpine
    container_name: caddy
    ports:
      - "8082:80"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - geth
      - graph-node
    networks:
      - geth-network
  sc-deployer:
    image: sc-deployer
    platform: linux/arm64
    container_name: sc-deployer
    user: root
    volumes:
      - ./sc-deployer:/workspace
      - ./geth-init:/shared
    working_dir: /workspace
    entrypoint: ["/bin/sh", "/workspace/entrypoint.sh"]
    depends_on:
      - geth
    networks:
      - geth-network
  sc-deployment-server:
    image: caddy:2.7-alpine
    container_name: sc-deployment-server
    ports:
      - "8083:80"
    volumes:
      - ./sc-deployment-server/Caddyfile:/etc/caddy/Caddyfile
      # serve deployment.json
      - ./sc-deployer:/usr/share/caddy
    depends_on:
      - sc-deployer
    networks:
      - geth-network
  geth:
    image: ethereum/client-go:v1.15.0
    container_name: geth
    ports:
      - "8545:8545"  # HTTP RPC
      - "8546:8546"  # WebSocket RPC
      - "30303:30303"  # P2P
      - "30303:30303/udp"  # P2P UDP
    volumes:
      - geth-data:/root/.ethereum
      - ./geth:/geth
    command: >
      --dev
      --datadir /root/.ethereum
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --http.corsdomain "*"
      --http.vhosts "*"
      --http.api "eth,net,web3,personal,miner,admin,debug"
      --ws
      --ws.addr 0.0.0.0
      --ws.port 8546
      --ws.api "eth,net,web3,personal,miner,admin,debug"
      --ws.origins "*"
      --allow-insecure-unlock
      --mine
      --networkid 1337
      --nodiscover
      --verbosity 3
      --miner.gaslimit 8000000
    restart: unless-stopped
    networks:
      - geth-network
  geth-init:
    image: ethereum/client-go:v1.15.0
    container_name: geth-init
    volumes:
      - ./geth-init:/scripts
      - geth-data:/root/.ethereum
      - ./geth-init:/shared
    entrypoint: ["/bin/sh", "/scripts/entrypoint.sh"]
    depends_on:
      - geth
    networks:
      - geth-network
  # Graph stack services
  graph-ipfs:
    image: ipfs/kubo:latest
    container_name: graph-ipfs
    command: daemon --migrate=true --agent-version-suffix=docker
    volumes:
      - graph-ipfs-data:/data/ipfs
    networks:
      - geth-network

  graph-postgres:
    image: postgres:14-alpine
    container_name: graph-postgres
    environment:
      POSTGRES_USER: graph
      POSTGRES_PASSWORD: graph
      POSTGRES_DB: graph
      POSTGRES_INITDB_ARGS: "--locale=C --encoding=UTF8"
    volumes:
      - graph-postgres-data:/var/lib/postgresql/data
    networks:
      - geth-network

  graph-redis:
    image: redis:7-alpine
    container_name: graph-redis
    networks:
      - geth-network

  graph-node:
    image: graphprotocol/graph-node:latest
    container_name: graph-node
    depends_on:
      - graph-postgres
      - graph-redis
      - graph-ipfs
      - geth
    environment:
      GRAPH_LOG: info
      RUST_LOG: info
      postgres_host: graph-postgres
      postgres_user: graph
      postgres_pass: graph
      postgres_db: graph
      ipfs: http://graph-ipfs:5001
      redis: redis://graph-redis:6379
      ethereum: local:http://geth:8545
    networks:
      - geth-network

  # blockscout: should be another docker-compose.yml file from https://github.com/blockscout/blockscout/tree/master/docker-compose. Don't create a container in this file.

volumes:
  geth-data:
  graph-postgres-data:
  graph-ipfs-data:

networks:
  geth-network:
    driver: bridge
